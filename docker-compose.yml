version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: monitoring_service
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - devops_network

  # Redis for notification service queues
  redis:
    image: redis:7-alpine
    container_name: devops_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - devops_network

  # User Service
  user-service:
    build: ./services/user
    container_name: user_service
    ports:
      - "3001:3001"
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/user_service
      - JWT_SECRET=rXet6vh:FM3y6;[
      - PORT=3001
    depends_on:
      - postgres
    networks:
      - devops_network

  # Monitoring Service
  monitoring-service:
    build: ./services/monitoring
    container_name: monitoring_service
    ports:
      - "3002:3002"
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/monitoring_service
      - USER_SERVICE_URL=http://user-service:3001
      - PORT=3002
    depends_on:
      - postgres
      - user-service
    networks:
      - devops_network

  # AI Service
  ai-service:
    build: ./services/ai
    container_name: ai_service
    ports:
      - "3003:3003"
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/ai_service
      - GEMINI_API_KEY=your-gemini-api-key
      - USER_SERVICE_URL=http://user-service:3001
      - PORT=3003
    depends_on:
      - postgres
      - user-service
    networks:
      - devops_network

  # Notification Service
  notification-service:
    build: ./services/notification
    container_name: notification_service
    ports:
      - "3004:3004"
    environment:
      - DATABASE_URL=postgresql://postgres:password@postgres:5432/notification_service
      - USER_SERVICE_URL=http://user-service:3001
      - MONITORING_SERVICE_URL=http://monitoring-service:3002
      - REDIS_URL=redis://redis:6379
      - SMTP_HOST=smtp.gmail.com
      - SMTP_PORT=587
      - SMTP_SECURE=false
      - SMTP_USER=your-email@gmail.com
      - SMTP_PASS=your-app-password
      - FROM_EMAIL=noreply@yourapp.com
      - PORT=3004
    depends_on:
      - postgres
      - redis
      - user-service
      - monitoring-service
    networks:
      - devops_network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: devops_nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - user-service
      - monitoring-service
      - ai-service
      - notification-service
    networks:
      - devops_network

volumes:
  postgres_data:
  redis_data:

networks:
  devops_network:
    driver: bridge
